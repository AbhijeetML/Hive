#Download vechile sales data -> https://github.com/shashank-mishra219/Hive-Class/blob/main/sales_order_data.csv

#Store raw data into hdfs location
   hdfs dfs -put /home/itv004004/sales/sales_order_data.csv /user/itv004004/raw
   
#Create a internal hive table "sales_order_csv" which will store csv data sales_order_csv .. make sure to skip header row while creating table

create table sales_order_csv
(ORDERNUMBER int,
QUANTITYORDERED int,
PRICEEACH double,
ORDERLINENUMBER int,
SALES double,
STATUS string,
QTR_ID int,
MONTH_ID int,
YEAR_ID int,
PRODUCTLINE string,
MSRP int,
PRODUCTCODE string,
PHONE string,
CITY String,
STATE string,
POSTALCODE string,
COUNTRY string,
TERRITORY string,
CONTACTLASTNAME string,
CONTACTFIRSTNAME string,
DEALSIZE string)
row format delimited fields terminated by ","
tblProperties("skip.header.line.count"="1");

#Load data from hdfs path into "sales_order_csv" 

  load data inpath "/user/itv004004/raw/sales_order_data.csv" into table sales_order_csv;
  
#Create an internal hive table which will store data in ORC format "sales_order_orc"

create table sales_order_orc
(ORDERNUMBER int,
QUANTITYORDERED int,
PRICEEACH double,
ORDERLINENUMBER int,
SALES double,
STATUS string,
QTR_ID int,
MONTH_ID int,
YEAR_ID int,
PRODUCTLINE string,
MSRP int,
PRODUCTCODE string,
PHONE string,
CITY String,
STATE string,
POSTALCODE string,
COUNTRY string,
TERRITORY string,
CONTACTLASTNAME string,
CONTACTFIRSTNAME string,
DEALSIZE string)
stored as orc;

#Load data from "sales_order_csv" into "sales_order_orc"

insert into table sales_order_orc select * from sales_order_csv;

#Calculate total sales per year

select YEAR_ID,sum(SALES) from sales_order_orc group by YEAR_ID;

#Find a product for which maximum orders were placed

with top as (select PRODUCTLINE,sum(QUANTITYORDERED) as total_order,dense_rank() over(order by sum(QUANTITYORDERED) desc) as highest_order from sales_order_orc group by PRODUCTLINE)
select productline as maxorder_product from top where highest_order=1;

#Calculate the total sales for each quarter

with top as (select *, case 
when MONTH_ID between 1 and 3 then 1
when MONTH_ID between 4 and 6 then 2
when MONTH_ID between 7 and 9 then 3
when MONTH_ID between 9 and 12 then 4
end as qtr from sales_order_orc)
select year_id,qtr,sum(sales) as Total_sales from top group by year_id,qtr;

#In which quarter sales was minimum
with top as (select *, case 
when MONTH_ID between 1 and 3 then 1
when MONTH_ID between 4 and 6 then 2
when MONTH_ID between 7 and 9 then 3
when MONTH_ID between 9 and 12 then 4
end as qtr from sales_order_orc),
top_intermediate as (select year_id,qtr,sum(sales) as Total_sales,dense_rank() over(partition by year_id order by sum(sales) asc ) as rank from top group by year_id,qtr)
select year_id,qtr, total_sales from top_intermediate where rank=1;

#In which country sales was maximum and in which country sales was minimum

with top as(select year_id,COUNTRY,sum(sales) as total_sales,dense_rank() over(partition by year_id order by sum(sales) desc) as max_sale ,
dense_rank() over(partition by year_id order by sum(sales)) as min_sale from sales_order_orc group by year_id,country)
select year_id,country,total_sales from top where max_sale=1 or min_sale=1;
